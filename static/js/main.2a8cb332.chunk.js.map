{"version":3,"sources":["components/Square/Square.js","components/Board/Board.js","components/History/History.js","App.js","reportWebVitals.js","index.js"],"names":["Square","className","onClick","props","this","value","React","Component","Board","i","history","length","squares","handleClick","slice","calculateWinner","isNext","updateHistory","updateIsNext","lines","a","b","c","winner","line","status","currentBoard","includes","push","renderSquare","History","histotyList","map","item","index","Array","App","state","fill","setState","concat","splice","handleGoBack","bind","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2a8cb332.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Square extends React.Component {\r\n    render() {\r\n        return(\r\n            <button\r\n                className=\"square\"\r\n                onClick={() => this.props.onClick()}\r\n            >\r\n                {this.props.value}\r\n            </button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Square;\r\n","import {Component} from 'react';\r\nimport Square from '../Square/Square';\r\n\r\nclass Board extends Component {\r\n\r\n    renderSquare(i) {\r\n        let value = this.props.history[this.props.history.length-1].squares[i];\r\n\r\n        return (\r\n            <Square\r\n                key={i}\r\n                value={value}\r\n                onClick={() => this.handleClick(i)}\r\n            />\r\n        );\r\n    }\r\n\r\n    handleClick(i) {\r\n        const history = this.props.history;\r\n        const current = history[this.props.history.length - 1];\r\n        const squares = current.squares.slice();\r\n\r\n        if (this.calculateWinner(squares) || squares[i]) {\r\n            return;\r\n        }\r\n\r\n        squares[i] = this.props.isNext ? 'X' : '0';\r\n\r\n        this.props.updateHistory(squares)\r\n        this.props.updateIsNext();\r\n    }\r\n\r\n    calculateWinner(squares) {\r\n        const lines = [\r\n            [0, 1, 2],\r\n            [3, 4, 5],\r\n            [6, 7, 8],\r\n            [0, 3, 6],\r\n            [1, 4, 7],\r\n            [2, 5, 8],\r\n            [0, 4, 8],\r\n            [2, 4, 6],\r\n        ];\r\n        for (let i = 0; i < lines.length; i++) {\r\n            const [a, b, c] = lines[i];\r\n            if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n                return {winner: squares[a], line: lines[i]};\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n        const currentBoard = this.props.history[this.props.history.length - 1].squares;\r\n        const winner = this.calculateWinner(currentBoard);\r\n\r\n        let status;\r\n        if (winner) {\r\n            status = 'Winner: ' + winner.winner;\r\n        } else if (!winner && !currentBoard.includes(null)) {\r\n            status = 'Winner: X-Y';\r\n        } else {\r\n            status = 'Next player: ' + (this.props.isNext ? 'X' : 'O');\r\n        }\r\n\r\n        const squares = [];\r\n\r\n        for (let i = 0; i < 9; i++) {\r\n            if (i % 3 === 0) {\r\n                squares.push(<div key={(i+1)*10} className=\"board-row\"></div>);\r\n            }\r\n            squares.push(this.renderSquare(i));\r\n        }\r\n\r\n        return(\r\n            <div className=\"item\">\r\n                <div className=\"status\">\r\n                    {status}\r\n                </div>\r\n                {squares}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Board;\r\n","import {Component} from 'react';\r\nimport Board from '../Board/Board';\r\n\r\nclass History extends Component{\r\n\r\n    render() {\r\n        const histotyList = this.props.history.slice().map((item, index) => {\r\n            return <Board key={'board-'+index} history={new Array(item)}/>;\r\n        });\r\n\r\n        return (\r\n            <div className=\"game-history\">\r\n                {histotyList}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default History;\r\n","import './App.css';\r\nimport Board from './components/Board/Board';\r\nimport History from './components/History/History';\r\nimport {Component} from 'react';\r\n\r\nclass App extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            history: [{\r\n                squares: new Array(9).fill(null),\r\n            }],\r\n            isNext: true,\r\n        }\r\n    }\r\n\r\n    updateHistory(squares) {\r\n        this.setState((state) => {\r\n             return {\r\n                 history: state.history.concat([{\r\n                     squares: squares\r\n                 }]),\r\n             }\r\n        });\r\n    }\r\n\r\n    updateIsNext() {\r\n        this.setState((state) => ({\r\n            isNext: !state.isNext\r\n        }));\r\n    }\r\n\r\n    handleGoBack() {\r\n        let history = this.state.history.slice();\r\n\r\n        if (history.length <= 1) {\r\n            return;\r\n        }\r\n\r\n        history.splice(this.state.history.length - 1, 1);\r\n\r\n        this.setState({\r\n            isNext: !this.state.isNext,\r\n            history: history\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"main-container\">\r\n                <button className=\"go-back\" onClick={() => this.handleGoBack()}>Go back</button>\r\n                <div className=\"game\">\r\n                    <div className=\"game-board\">\r\n                        <Board\r\n                            isNext={this.state.isNext}\r\n                            history={this.state.history}\r\n                            updateHistory={this.updateHistory.bind(this)}\r\n                            updateIsNext={this.updateIsNext.bind(this)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"game-info\">\r\n                    <h2 className=\"game-info__title\">History:</h2>\r\n                    <History history={this.state.history}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}