{"version":3,"sources":["components/Square/Square.js","components/Board/Board.js","components/History/History.js","App.js","reportWebVitals.js","index.js"],"names":["Square","className","onClick","props","this","value","React","Component","Board","i","history","length","squares","handleClick","slice","calculateWinner","isNext","updateHistory","setState","concat","updateIsNext","lines","a","b","c","winner","line","status","currentBoard","includes","push","renderSquare","History","histotyList","reverse","forEach","item","Array","App","state","fill","splice","handleGoBack","bind","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.005a8ce5.chunk.js","sourcesContent":["import React from 'react';\n\nclass Square extends React.Component {\n    render() {\n        return(\n            <button\n                className=\"square\"\n                onClick={() => this.props.onClick()}\n            >\n                {this.props.value}\n            </button>\n        );\n    }\n}\n\nexport default Square;\n","import {Component} from 'react';\nimport Square from '../Square/Square';\n\nclass Board extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    renderSquare(i) {\n        let value = this.props.history[this.props.history.length-1].squares[i];\n\n        return (\n            <Square\n                value={value}\n                onClick={() => this.handleClick(i)}\n            />\n        );\n    }\n\n    handleClick(i) {\n        const history = this.props.history;\n        const current = history[this.props.history.length - 1];\n        const squares = current.squares.slice();\n\n        if (this.calculateWinner(squares) || squares[i]) {\n            return;\n        }\n\n        squares[i] = this.props.isNext ? 'X' : '0';\n\n        this.props.updateHistory(squares)\n\n        this.setState({\n            history: history.concat([{\n                squares: squares\n            }]),\n        });\n\n        this.props.updateIsNext();\n    }\n\n    calculateWinner(squares) {\n        const lines = [\n            [0, 1, 2],\n            [3, 4, 5],\n            [6, 7, 8],\n            [0, 3, 6],\n            [1, 4, 7],\n            [2, 5, 8],\n            [0, 4, 8],\n            [2, 4, 6],\n        ];\n        for (let i = 0; i < lines.length; i++) {\n            const [a, b, c] = lines[i];\n            if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n                return {winner: squares[a], line: lines[i]};\n            }\n        }\n        return null;\n    }\n\n    render() {\n        const currentBoard = this.props.history[this.props.history.length - 1].squares;\n        const winner = this.calculateWinner(currentBoard);\n\n        let status;\n        if (winner) {\n            status = 'Winner: ' + winner.winner;\n        } else if (!winner && !currentBoard.includes(null)) {\n            status = 'Winner: X-Y';\n        } else {\n            status = 'Next player: ' + (this.props.isNext ? 'X' : 'O');\n        }\n\n        const squares = [];\n\n        for (let i = 0; i < 9; i++) {\n            if (i % 3 === 0) {\n                squares.push(<div className=\"board-row\"></div>);\n            }\n            squares.push(this.renderSquare(i));\n        }\n\n        return(\n            <div className=\"item\">\n                <div className=\"status\">\n                    {status}\n                </div>\n                {squares}\n            </div>\n        );\n    }\n}\n\nexport default Board;\n","import {Component} from 'react';\r\nimport Board from '../Board/Board';\r\n\r\nclass History extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const histotyList = [];\r\n\r\n        this.props.history.reverse().forEach((item) => {\r\n            histotyList.push(<Board history={new Array(item)}/>)\r\n        })\r\n\r\n        return (\r\n            <div className=\"game-history\">\r\n                {histotyList}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default History;\r\n","import './App.css';\nimport Board from './components/Board/Board';\nimport History from './components/History/History';\nimport {Component} from 'react';\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            history: [{\n                squares: new Array(9).fill(null),\n            }],\n            isNext: true,\n        }\n    }\n\n    updateHistory(squares) {\n        this.setState({\n            history: this.state.history.concat([{\n                squares: squares\n            }]),\n        });\n    }\n\n    updateIsNext() {\n        this.setState((state) => ({\n            isNext: !state.isNext\n        }));\n    }\n\n    handleGoBack() {\n        let history = this.state.history.slice();\n\n        if (history.length <= 1) {\n            return;\n        }\n\n        history.splice(this.state.history.length - 1, 1);\n\n        this.setState({\n            isNext: !this.state.isNext,\n            history: history\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"main-container\">\n                <button className=\"go-back\" onClick={() => this.handleGoBack()}>Go back</button>\n                <div className=\"game\">\n                    <div className=\"game-board\">\n                        <Board\n                            isNext={this.state.isNext}\n                            history={this.state.history}\n                            updateHistory={this.updateHistory.bind(this)}\n                            updateIsNext={this.updateIsNext.bind(this)}\n                        />\n                    </div>\n                </div>\n                <div className=\"game-info\">\n                    <h2 className=\"game-info__title\">History:</h2>\n                    <History history={this.state.history}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}